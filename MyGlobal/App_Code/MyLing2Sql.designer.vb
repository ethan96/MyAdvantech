'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="MyAdvantechGlobal")>  _
Partial Public Class MyLing2SqlDataContext
	Inherits System.Data.Linq.DataContext
	
	Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()
	
  #Region "Extensibility Method Definitions"
  Partial Private Sub OnCreated()
  End Sub
  Partial Private Sub InsertEWPartNo(instance As EWPartNo)
    End Sub
  Partial Private Sub UpdateEWPartNo(instance As EWPartNo)
    End Sub
  Partial Private Sub DeleteEWPartNo(instance As EWPartNo)
    End Sub
  Partial Private Sub InsertOrderItem(instance As OrderItem)
    End Sub
  Partial Private Sub UpdateOrderItem(instance As OrderItem)
    End Sub
  Partial Private Sub DeleteOrderItem(instance As OrderItem)
    End Sub
  Partial Private Sub InsertCartMaster(instance As CartMaster)
    End Sub
  Partial Private Sub UpdateCartMaster(instance As CartMaster)
    End Sub
  Partial Private Sub DeleteCartMaster(instance As CartMaster)
    End Sub
  Partial Private Sub InsertCart2OrderMaping(instance As Cart2OrderMaping)
    End Sub
  Partial Private Sub UpdateCart2OrderMaping(instance As Cart2OrderMaping)
    End Sub
  Partial Private Sub DeleteCart2OrderMaping(instance As Cart2OrderMaping)
    End Sub
  Partial Private Sub InsertorderMasterExtensionV2(instance As orderMasterExtensionV2)
    End Sub
  Partial Private Sub UpdateorderMasterExtensionV2(instance As orderMasterExtensionV2)
    End Sub
  Partial Private Sub DeleteorderMasterExtensionV2(instance As orderMasterExtensionV2)
    End Sub
  Partial Private Sub InsertCartItem(instance As CartItem)
    End Sub
  Partial Private Sub UpdateCartItem(instance As CartItem)
    End Sub
  Partial Private Sub DeleteCartItem(instance As CartItem)
    End Sub
  Partial Private Sub InsertCart_BtosPart_Manual(instance As Cart_BtosPart_Manual)
    End Sub
  Partial Private Sub UpdateCart_BtosPart_Manual(instance As Cart_BtosPart_Manual)
    End Sub
  Partial Private Sub DeleteCart_BtosPart_Manual(instance As Cart_BtosPart_Manual)
    End Sub
  #End Region
	
	Public Sub New()
		MyBase.New(Global.System.Configuration.ConfigurationManager.ConnectionStrings("MY").ConnectionString, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public ReadOnly Property EWPartNos() As System.Data.Linq.Table(Of EWPartNo)
		Get
			Return Me.GetTable(Of EWPartNo)
		End Get
	End Property
	
	Public ReadOnly Property OrderItems() As System.Data.Linq.Table(Of OrderItem)
		Get
			Return Me.GetTable(Of OrderItem)
		End Get
	End Property
	
	Public ReadOnly Property CartMasters() As System.Data.Linq.Table(Of CartMaster)
		Get
			Return Me.GetTable(Of CartMaster)
		End Get
	End Property
	
	Public ReadOnly Property Cart2OrderMapings() As System.Data.Linq.Table(Of Cart2OrderMaping)
		Get
			Return Me.GetTable(Of Cart2OrderMaping)
		End Get
	End Property
	
	Public ReadOnly Property orderMasterExtensionV2s() As System.Data.Linq.Table(Of orderMasterExtensionV2)
		Get
			Return Me.GetTable(Of orderMasterExtensionV2)
		End Get
	End Property
	
	Public ReadOnly Property CartItems() As System.Data.Linq.Table(Of CartItem)
		Get
			Return Me.GetTable(Of CartItem)
		End Get
	End Property
	
	Public ReadOnly Property Cart_BtosPart_Manuals() As System.Data.Linq.Table(Of Cart_BtosPart_Manual)
		Get
			Return Me.GetTable(Of Cart_BtosPart_Manual)
		End Get
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.ExtendedWarrantyPartNo_V2")>  _
Partial Public Class EWPartNo
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ID As Integer
	
	Private _EW_PartNO As String
	
	Private _EW_Month As System.Nullable(Of Integer)
	
	Private _EW_Rate As System.Nullable(Of Decimal)
	
	Private _Plant As String
	
	Private _SeqNO As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnEW_PartNOChanging(value As String)
    End Sub
    Partial Private Sub OnEW_PartNOChanged()
    End Sub
    Partial Private Sub OnEW_MonthChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnEW_MonthChanged()
    End Sub
    Partial Private Sub OnEW_RateChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnEW_RateChanged()
    End Sub
    Partial Private Sub OnPlantChanging(value As String)
    End Sub
    Partial Private Sub OnPlantChanged()
    End Sub
    Partial Private Sub OnSeqNOChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSeqNOChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EW_PartNO", DbType:="NVarChar(50)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property EW_PartNO() As String
		Get
			Return Me._EW_PartNO
		End Get
		Set
			If (String.Equals(Me._EW_PartNO, value) = false) Then
				Me.OnEW_PartNOChanging(value)
				Me.SendPropertyChanging
				Me._EW_PartNO = value
				Me.SendPropertyChanged("EW_PartNO")
				Me.OnEW_PartNOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EW_Month", DbType:="Int", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property EW_Month() As System.Nullable(Of Integer)
		Get
			Return Me._EW_Month
		End Get
		Set
			If (Me._EW_Month.Equals(value) = false) Then
				Me.OnEW_MonthChanging(value)
				Me.SendPropertyChanging
				Me._EW_Month = value
				Me.SendPropertyChanged("EW_Month")
				Me.OnEW_MonthChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EW_Rate", DbType:="Decimal(18,4)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property EW_Rate() As System.Nullable(Of Decimal)
		Get
			Return Me._EW_Rate
		End Get
		Set
			If (Me._EW_Rate.Equals(value) = false) Then
				Me.OnEW_RateChanging(value)
				Me.SendPropertyChanging
				Me._EW_Rate = value
				Me.SendPropertyChanged("EW_Rate")
				Me.OnEW_RateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Plant", DbType:="NVarChar(10)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Plant() As String
		Get
			Return Me._Plant
		End Get
		Set
			If (String.Equals(Me._Plant, value) = false) Then
				Me.OnPlantChanging(value)
				Me.SendPropertyChanging
				Me._Plant = value
				Me.SendPropertyChanged("Plant")
				Me.OnPlantChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SeqNO", DbType:="Int", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property SeqNO() As System.Nullable(Of Integer)
		Get
			Return Me._SeqNO
		End Get
		Set
			If (Me._SeqNO.Equals(value) = false) Then
				Me.OnSeqNOChanging(value)
				Me.SendPropertyChanging
				Me._SeqNO = value
				Me.SendPropertyChanged("SeqNO")
				Me.OnSeqNOChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.ORDER_DETAIL")>  _
Partial Public Class OrderItem
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ID As Integer
	
	Private _ORDER_ID As String
	
	Private _LINE_NO As System.Nullable(Of Integer)
	
	Private _PRODUCT_LINE As String
	
	Private _PART_NO As String
	
	Private _ORDER_LINE_TYPE As String
	
	Private _QTY As System.Nullable(Of Integer)
	
	Private _LIST_PRICE As System.Nullable(Of Decimal)
	
	Private _UNIT_PRICE As System.Nullable(Of Decimal)
	
	Private _REQUIRED_DATE As System.Nullable(Of Date)
	
	Private _DUE_DATE As System.Nullable(Of Date)
	
	Private _ERP_SITE As String
	
	Private _ERP_LOCATION As String
	
	Private _AUTO_ORDER_FLAG As System.Nullable(Of Char)
	
	Private _AUTO_ORDER_QTY As System.Nullable(Of Integer)
	
	Private _SUPPLIER_DUE_DATE As System.Nullable(Of Date)
	
	Private _LINE_PARTIAL_FLAG As System.Nullable(Of Integer)
	
	Private _RoHS_FLAG As String
	
	Private _EXWARRANTY_FLAG As String
	
	Private _CustMaterialNo As String
	
	Private _DeliveryPlant As String
	
	Private _NoATPFlag As String
	
	Private _DMF_Flag As String
	
	Private _OptyID As String
	
	Private _Cate As String
	
	Private _Description As String
	
	Private _HigherLevel As System.Nullable(Of Integer)
	
	Private _itp As System.Nullable(Of Decimal)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnORDER_IDChanging(value As String)
    End Sub
    Partial Private Sub OnORDER_IDChanged()
    End Sub
    Partial Private Sub OnLINE_NOChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnLINE_NOChanged()
    End Sub
    Partial Private Sub OnPRODUCT_LINEChanging(value As String)
    End Sub
    Partial Private Sub OnPRODUCT_LINEChanged()
    End Sub
    Partial Private Sub OnPART_NOChanging(value As String)
    End Sub
    Partial Private Sub OnPART_NOChanged()
    End Sub
    Partial Private Sub OnORDER_LINE_TYPEChanging(value As String)
    End Sub
    Partial Private Sub OnORDER_LINE_TYPEChanged()
    End Sub
    Partial Private Sub OnQTYChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnQTYChanged()
    End Sub
    Partial Private Sub OnLIST_PRICEChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnLIST_PRICEChanged()
    End Sub
    Partial Private Sub OnUNIT_PRICEChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnUNIT_PRICEChanged()
    End Sub
    Partial Private Sub OnREQUIRED_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnREQUIRED_DATEChanged()
    End Sub
    Partial Private Sub OnDUE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDUE_DATEChanged()
    End Sub
    Partial Private Sub OnERP_SITEChanging(value As String)
    End Sub
    Partial Private Sub OnERP_SITEChanged()
    End Sub
    Partial Private Sub OnERP_LOCATIONChanging(value As String)
    End Sub
    Partial Private Sub OnERP_LOCATIONChanged()
    End Sub
    Partial Private Sub OnAUTO_ORDER_FLAGChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub OnAUTO_ORDER_FLAGChanged()
    End Sub
    Partial Private Sub OnAUTO_ORDER_QTYChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnAUTO_ORDER_QTYChanged()
    End Sub
    Partial Private Sub OnSUPPLIER_DUE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnSUPPLIER_DUE_DATEChanged()
    End Sub
    Partial Private Sub OnLINE_PARTIAL_FLAGChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnLINE_PARTIAL_FLAGChanged()
    End Sub
    Partial Private Sub OnRoHS_FLAGChanging(value As String)
    End Sub
    Partial Private Sub OnRoHS_FLAGChanged()
    End Sub
    Partial Private Sub OnEXWARRANTY_FLAGChanging(value As String)
    End Sub
    Partial Private Sub OnEXWARRANTY_FLAGChanged()
    End Sub
    Partial Private Sub OnCustMaterialNoChanging(value As String)
    End Sub
    Partial Private Sub OnCustMaterialNoChanged()
    End Sub
    Partial Private Sub OnDeliveryPlantChanging(value As String)
    End Sub
    Partial Private Sub OnDeliveryPlantChanged()
    End Sub
    Partial Private Sub OnNoATPFlagChanging(value As String)
    End Sub
    Partial Private Sub OnNoATPFlagChanged()
    End Sub
    Partial Private Sub OnDMF_FlagChanging(value As String)
    End Sub
    Partial Private Sub OnDMF_FlagChanged()
    End Sub
    Partial Private Sub OnOptyIDChanging(value As String)
    End Sub
    Partial Private Sub OnOptyIDChanged()
    End Sub
    Partial Private Sub OnCateChanging(value As String)
    End Sub
    Partial Private Sub OnCateChanged()
    End Sub
    Partial Private Sub OnDescriptionChanging(value As String)
    End Sub
    Partial Private Sub OnDescriptionChanged()
    End Sub
    Partial Private Sub OnHigherLevelChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnHigherLevelChanged()
    End Sub
    Partial Private Sub OnitpChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnitpChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ORDER_ID", DbType:="VarChar(50)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property ORDER_ID() As String
		Get
			Return Me._ORDER_ID
		End Get
		Set
			If (String.Equals(Me._ORDER_ID, value) = false) Then
				Me.OnORDER_IDChanging(value)
				Me.SendPropertyChanging
				Me._ORDER_ID = value
				Me.SendPropertyChanged("ORDER_ID")
				Me.OnORDER_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LINE_NO", DbType:="Int", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property LINE_NO() As System.Nullable(Of Integer)
		Get
			Return Me._LINE_NO
		End Get
		Set
			If (Me._LINE_NO.Equals(value) = false) Then
				Me.OnLINE_NOChanging(value)
				Me.SendPropertyChanging
				Me._LINE_NO = value
				Me.SendPropertyChanged("LINE_NO")
				Me.OnLINE_NOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PRODUCT_LINE", DbType:="VarChar(10)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property PRODUCT_LINE() As String
		Get
			Return Me._PRODUCT_LINE
		End Get
		Set
			If (String.Equals(Me._PRODUCT_LINE, value) = false) Then
				Me.OnPRODUCT_LINEChanging(value)
				Me.SendPropertyChanging
				Me._PRODUCT_LINE = value
				Me.SendPropertyChanged("PRODUCT_LINE")
				Me.OnPRODUCT_LINEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PART_NO", DbType:="VarChar(50)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property PART_NO() As String
		Get
			Return Me._PART_NO
		End Get
		Set
			If (String.Equals(Me._PART_NO, value) = false) Then
				Me.OnPART_NOChanging(value)
				Me.SendPropertyChanging
				Me._PART_NO = value
				Me.SendPropertyChanged("PART_NO")
				Me.OnPART_NOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ORDER_LINE_TYPE", DbType:="VarChar(30)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property ORDER_LINE_TYPE() As String
		Get
			Return Me._ORDER_LINE_TYPE
		End Get
		Set
			If (String.Equals(Me._ORDER_LINE_TYPE, value) = false) Then
				Me.OnORDER_LINE_TYPEChanging(value)
				Me.SendPropertyChanging
				Me._ORDER_LINE_TYPE = value
				Me.SendPropertyChanged("ORDER_LINE_TYPE")
				Me.OnORDER_LINE_TYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_QTY", DbType:="Int", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property QTY() As System.Nullable(Of Integer)
		Get
			Return Me._QTY
		End Get
		Set
			If (Me._QTY.Equals(value) = false) Then
				Me.OnQTYChanging(value)
				Me.SendPropertyChanging
				Me._QTY = value
				Me.SendPropertyChanged("QTY")
				Me.OnQTYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LIST_PRICE", DbType:="Money", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property LIST_PRICE() As System.Nullable(Of Decimal)
		Get
			Return Me._LIST_PRICE
		End Get
		Set
			If (Me._LIST_PRICE.Equals(value) = false) Then
				Me.OnLIST_PRICEChanging(value)
				Me.SendPropertyChanging
				Me._LIST_PRICE = value
				Me.SendPropertyChanged("LIST_PRICE")
				Me.OnLIST_PRICEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UNIT_PRICE", DbType:="Money", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property UNIT_PRICE() As System.Nullable(Of Decimal)
		Get
			Return Me._UNIT_PRICE
		End Get
		Set
			If (Me._UNIT_PRICE.Equals(value) = false) Then
				Me.OnUNIT_PRICEChanging(value)
				Me.SendPropertyChanging
				Me._UNIT_PRICE = value
				Me.SendPropertyChanged("UNIT_PRICE")
				Me.OnUNIT_PRICEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REQUIRED_DATE", DbType:="DateTime", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property REQUIRED_DATE() As System.Nullable(Of Date)
		Get
			Return Me._REQUIRED_DATE
		End Get
		Set
			If (Me._REQUIRED_DATE.Equals(value) = false) Then
				Me.OnREQUIRED_DATEChanging(value)
				Me.SendPropertyChanging
				Me._REQUIRED_DATE = value
				Me.SendPropertyChanged("REQUIRED_DATE")
				Me.OnREQUIRED_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DUE_DATE", DbType:="DateTime", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property DUE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._DUE_DATE
		End Get
		Set
			If (Me._DUE_DATE.Equals(value) = false) Then
				Me.OnDUE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._DUE_DATE = value
				Me.SendPropertyChanged("DUE_DATE")
				Me.OnDUE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ERP_SITE", DbType:="VarChar(50)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property ERP_SITE() As String
		Get
			Return Me._ERP_SITE
		End Get
		Set
			If (String.Equals(Me._ERP_SITE, value) = false) Then
				Me.OnERP_SITEChanging(value)
				Me.SendPropertyChanging
				Me._ERP_SITE = value
				Me.SendPropertyChanged("ERP_SITE")
				Me.OnERP_SITEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ERP_LOCATION", DbType:="VarChar(50)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property ERP_LOCATION() As String
		Get
			Return Me._ERP_LOCATION
		End Get
		Set
			If (String.Equals(Me._ERP_LOCATION, value) = false) Then
				Me.OnERP_LOCATIONChanging(value)
				Me.SendPropertyChanging
				Me._ERP_LOCATION = value
				Me.SendPropertyChanged("ERP_LOCATION")
				Me.OnERP_LOCATIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AUTO_ORDER_FLAG", DbType:="Char(1)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property AUTO_ORDER_FLAG() As System.Nullable(Of Char)
		Get
			Return Me._AUTO_ORDER_FLAG
		End Get
		Set
			If (Me._AUTO_ORDER_FLAG.Equals(value) = false) Then
				Me.OnAUTO_ORDER_FLAGChanging(value)
				Me.SendPropertyChanging
				Me._AUTO_ORDER_FLAG = value
				Me.SendPropertyChanged("AUTO_ORDER_FLAG")
				Me.OnAUTO_ORDER_FLAGChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AUTO_ORDER_QTY", DbType:="Int", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property AUTO_ORDER_QTY() As System.Nullable(Of Integer)
		Get
			Return Me._AUTO_ORDER_QTY
		End Get
		Set
			If (Me._AUTO_ORDER_QTY.Equals(value) = false) Then
				Me.OnAUTO_ORDER_QTYChanging(value)
				Me.SendPropertyChanging
				Me._AUTO_ORDER_QTY = value
				Me.SendPropertyChanged("AUTO_ORDER_QTY")
				Me.OnAUTO_ORDER_QTYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SUPPLIER_DUE_DATE", DbType:="DateTime", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property SUPPLIER_DUE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._SUPPLIER_DUE_DATE
		End Get
		Set
			If (Me._SUPPLIER_DUE_DATE.Equals(value) = false) Then
				Me.OnSUPPLIER_DUE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._SUPPLIER_DUE_DATE = value
				Me.SendPropertyChanged("SUPPLIER_DUE_DATE")
				Me.OnSUPPLIER_DUE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LINE_PARTIAL_FLAG", DbType:="Int", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property LINE_PARTIAL_FLAG() As System.Nullable(Of Integer)
		Get
			Return Me._LINE_PARTIAL_FLAG
		End Get
		Set
			If (Me._LINE_PARTIAL_FLAG.Equals(value) = false) Then
				Me.OnLINE_PARTIAL_FLAGChanging(value)
				Me.SendPropertyChanging
				Me._LINE_PARTIAL_FLAG = value
				Me.SendPropertyChanged("LINE_PARTIAL_FLAG")
				Me.OnLINE_PARTIAL_FLAGChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RoHS_FLAG", DbType:="VarChar(4)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property RoHS_FLAG() As String
		Get
			Return Me._RoHS_FLAG
		End Get
		Set
			If (String.Equals(Me._RoHS_FLAG, value) = false) Then
				Me.OnRoHS_FLAGChanging(value)
				Me.SendPropertyChanging
				Me._RoHS_FLAG = value
				Me.SendPropertyChanged("RoHS_FLAG")
				Me.OnRoHS_FLAGChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EXWARRANTY_FLAG", DbType:="VarChar(5)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property EXWARRANTY_FLAG() As String
		Get
			Return Me._EXWARRANTY_FLAG
		End Get
		Set
			If (String.Equals(Me._EXWARRANTY_FLAG, value) = false) Then
				Me.OnEXWARRANTY_FLAGChanging(value)
				Me.SendPropertyChanging
				Me._EXWARRANTY_FLAG = value
				Me.SendPropertyChanged("EXWARRANTY_FLAG")
				Me.OnEXWARRANTY_FLAGChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CustMaterialNo", DbType:="VarChar(150)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property CustMaterialNo() As String
		Get
			Return Me._CustMaterialNo
		End Get
		Set
			If (String.Equals(Me._CustMaterialNo, value) = false) Then
				Me.OnCustMaterialNoChanging(value)
				Me.SendPropertyChanging
				Me._CustMaterialNo = value
				Me.SendPropertyChanged("CustMaterialNo")
				Me.OnCustMaterialNoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DeliveryPlant", DbType:="NVarChar(20) NOT NULL", CanBeNull:=false, UpdateCheck:=UpdateCheck.Never)>  _
	Public Property DeliveryPlant() As String
		Get
			Return Me._DeliveryPlant
		End Get
		Set
			If (String.Equals(Me._DeliveryPlant, value) = false) Then
				Me.OnDeliveryPlantChanging(value)
				Me.SendPropertyChanging
				Me._DeliveryPlant = value
				Me.SendPropertyChanged("DeliveryPlant")
				Me.OnDeliveryPlantChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NoATPFlag", DbType:="VarChar(1)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property NoATPFlag() As String
		Get
			Return Me._NoATPFlag
		End Get
		Set
			If (String.Equals(Me._NoATPFlag, value) = false) Then
				Me.OnNoATPFlagChanging(value)
				Me.SendPropertyChanging
				Me._NoATPFlag = value
				Me.SendPropertyChanged("NoATPFlag")
				Me.OnNoATPFlagChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DMF_Flag", DbType:="VarChar(50)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property DMF_Flag() As String
		Get
			Return Me._DMF_Flag
		End Get
		Set
			If (String.Equals(Me._DMF_Flag, value) = false) Then
				Me.OnDMF_FlagChanging(value)
				Me.SendPropertyChanging
				Me._DMF_Flag = value
				Me.SendPropertyChanged("DMF_Flag")
				Me.OnDMF_FlagChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OptyID", DbType:="NVarChar(50)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property OptyID() As String
		Get
			Return Me._OptyID
		End Get
		Set
			If (String.Equals(Me._OptyID, value) = false) Then
				Me.OnOptyIDChanging(value)
				Me.SendPropertyChanging
				Me._OptyID = value
				Me.SendPropertyChanged("OptyID")
				Me.OnOptyIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Cate", DbType:="VarChar(300)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Cate() As String
		Get
			Return Me._Cate
		End Get
		Set
			If (String.Equals(Me._Cate, value) = false) Then
				Me.OnCateChanging(value)
				Me.SendPropertyChanging
				Me._Cate = value
				Me.SendPropertyChanged("Cate")
				Me.OnCateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Description", DbType:="NVarChar(1000)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Description() As String
		Get
			Return Me._Description
		End Get
		Set
			If (String.Equals(Me._Description, value) = false) Then
				Me.OnDescriptionChanging(value)
				Me.SendPropertyChanging
				Me._Description = value
				Me.SendPropertyChanged("Description")
				Me.OnDescriptionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HigherLevel", DbType:="Int", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property HigherLevel() As System.Nullable(Of Integer)
		Get
			Return Me._HigherLevel
		End Get
		Set
			If (Me._HigherLevel.Equals(value) = false) Then
				Me.OnHigherLevelChanging(value)
				Me.SendPropertyChanging
				Me._HigherLevel = value
				Me.SendPropertyChanged("HigherLevel")
				Me.OnHigherLevelChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_itp", DbType:="Decimal(10,2)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property itp() As System.Nullable(Of Decimal)
		Get
			Return Me._itp
		End Get
		Set
			If (Me._itp.Equals(value) = false) Then
				Me.OnitpChanging(value)
				Me.SendPropertyChanging
				Me._itp = value
				Me.SendPropertyChanged("itp")
				Me.OnitpChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.CARTMASTERV2")>  _
Partial Public Class CartMaster
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _CartID As String
	
	Private _ErpID As String
	
	Private _QuoteID As String
	
	Private _OpportunityID As String
	
	Private _OpportunityAmount As System.Nullable(Of Decimal)
	
	Private _Currency As String
	
	Private _CreatedBy As String
	
	Private _CreatedDate As System.Nullable(Of Date)
	
	Private _LastUpdatedBy As String
	
	Private _LastUpdatedDate As System.Nullable(Of Date)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnCartIDChanging(value As String)
    End Sub
    Partial Private Sub OnCartIDChanged()
    End Sub
    Partial Private Sub OnErpIDChanging(value As String)
    End Sub
    Partial Private Sub OnErpIDChanged()
    End Sub
    Partial Private Sub OnQuoteIDChanging(value As String)
    End Sub
    Partial Private Sub OnQuoteIDChanged()
    End Sub
    Partial Private Sub OnOpportunityIDChanging(value As String)
    End Sub
    Partial Private Sub OnOpportunityIDChanged()
    End Sub
    Partial Private Sub OnOpportunityAmountChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnOpportunityAmountChanged()
    End Sub
    Partial Private Sub OnCurrencyChanging(value As String)
    End Sub
    Partial Private Sub OnCurrencyChanged()
    End Sub
    Partial Private Sub OnCreatedByChanging(value As String)
    End Sub
    Partial Private Sub OnCreatedByChanged()
    End Sub
    Partial Private Sub OnCreatedDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCreatedDateChanged()
    End Sub
    Partial Private Sub OnLastUpdatedByChanging(value As String)
    End Sub
    Partial Private Sub OnLastUpdatedByChanged()
    End Sub
    Partial Private Sub OnLastUpdatedDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnLastUpdatedDateChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CartID", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property CartID() As String
		Get
			Return Me._CartID
		End Get
		Set
			If (String.Equals(Me._CartID, value) = false) Then
				Me.OnCartIDChanging(value)
				Me.SendPropertyChanging
				Me._CartID = value
				Me.SendPropertyChanged("CartID")
				Me.OnCartIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ErpID", DbType:="NVarChar(15)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property ErpID() As String
		Get
			Return Me._ErpID
		End Get
		Set
			If (String.Equals(Me._ErpID, value) = false) Then
				Me.OnErpIDChanging(value)
				Me.SendPropertyChanging
				Me._ErpID = value
				Me.SendPropertyChanged("ErpID")
				Me.OnErpIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_QuoteID", DbType:="NVarChar(20)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property QuoteID() As String
		Get
			Return Me._QuoteID
		End Get
		Set
			If (String.Equals(Me._QuoteID, value) = false) Then
				Me.OnQuoteIDChanging(value)
				Me.SendPropertyChanging
				Me._QuoteID = value
				Me.SendPropertyChanged("QuoteID")
				Me.OnQuoteIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OpportunityID", DbType:="NVarChar(15)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property OpportunityID() As String
		Get
			Return Me._OpportunityID
		End Get
		Set
			If (String.Equals(Me._OpportunityID, value) = false) Then
				Me.OnOpportunityIDChanging(value)
				Me.SendPropertyChanging
				Me._OpportunityID = value
				Me.SendPropertyChanged("OpportunityID")
				Me.OnOpportunityIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OpportunityAmount", DbType:="Decimal(18,0)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property OpportunityAmount() As System.Nullable(Of Decimal)
		Get
			Return Me._OpportunityAmount
		End Get
		Set
			If (Me._OpportunityAmount.Equals(value) = false) Then
				Me.OnOpportunityAmountChanging(value)
				Me.SendPropertyChanging
				Me._OpportunityAmount = value
				Me.SendPropertyChanged("OpportunityAmount")
				Me.OnOpportunityAmountChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Currency", DbType:="NVarChar(15)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Currency() As String
		Get
			Return Me._Currency
		End Get
		Set
			If (String.Equals(Me._Currency, value) = false) Then
				Me.OnCurrencyChanging(value)
				Me.SendPropertyChanging
				Me._Currency = value
				Me.SendPropertyChanged("Currency")
				Me.OnCurrencyChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CreatedBy", DbType:="NVarChar(50)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property CreatedBy() As String
		Get
			Return Me._CreatedBy
		End Get
		Set
			If (String.Equals(Me._CreatedBy, value) = false) Then
				Me.OnCreatedByChanging(value)
				Me.SendPropertyChanging
				Me._CreatedBy = value
				Me.SendPropertyChanged("CreatedBy")
				Me.OnCreatedByChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CreatedDate", DbType:="DateTime", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property CreatedDate() As System.Nullable(Of Date)
		Get
			Return Me._CreatedDate
		End Get
		Set
			If (Me._CreatedDate.Equals(value) = false) Then
				Me.OnCreatedDateChanging(value)
				Me.SendPropertyChanging
				Me._CreatedDate = value
				Me.SendPropertyChanged("CreatedDate")
				Me.OnCreatedDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LastUpdatedBy", DbType:="NVarChar(50)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property LastUpdatedBy() As String
		Get
			Return Me._LastUpdatedBy
		End Get
		Set
			If (String.Equals(Me._LastUpdatedBy, value) = false) Then
				Me.OnLastUpdatedByChanging(value)
				Me.SendPropertyChanging
				Me._LastUpdatedBy = value
				Me.SendPropertyChanged("LastUpdatedBy")
				Me.OnLastUpdatedByChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LastUpdatedDate", DbType:="DateTime", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property LastUpdatedDate() As System.Nullable(Of Date)
		Get
			Return Me._LastUpdatedDate
		End Get
		Set
			If (Me._LastUpdatedDate.Equals(value) = false) Then
				Me.OnLastUpdatedDateChanging(value)
				Me.SendPropertyChanging
				Me._LastUpdatedDate = value
				Me.SendPropertyChanged("LastUpdatedDate")
				Me.OnLastUpdatedDateChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Cart2OrderMaping")>  _
Partial Public Class Cart2OrderMaping
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ID As Integer
	
	Private _CartID As String
	
	Private _OrderID As String
	
	Private _OrderNo As String
	
	Private _CreateTime As System.Nullable(Of Date)
	
	Private _CreateBy As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnCartIDChanging(value As String)
    End Sub
    Partial Private Sub OnCartIDChanged()
    End Sub
    Partial Private Sub OnOrderIDChanging(value As String)
    End Sub
    Partial Private Sub OnOrderIDChanged()
    End Sub
    Partial Private Sub OnOrderNoChanging(value As String)
    End Sub
    Partial Private Sub OnOrderNoChanged()
    End Sub
    Partial Private Sub OnCreateTimeChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCreateTimeChanged()
    End Sub
    Partial Private Sub OnCreateByChanging(value As String)
    End Sub
    Partial Private Sub OnCreateByChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CartID", DbType:="NVarChar(20)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property CartID() As String
		Get
			Return Me._CartID
		End Get
		Set
			If (String.Equals(Me._CartID, value) = false) Then
				Me.OnCartIDChanging(value)
				Me.SendPropertyChanging
				Me._CartID = value
				Me.SendPropertyChanged("CartID")
				Me.OnCartIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OrderID", DbType:="NVarChar(20)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property OrderID() As String
		Get
			Return Me._OrderID
		End Get
		Set
			If (String.Equals(Me._OrderID, value) = false) Then
				Me.OnOrderIDChanging(value)
				Me.SendPropertyChanging
				Me._OrderID = value
				Me.SendPropertyChanged("OrderID")
				Me.OnOrderIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OrderNo", DbType:="NVarChar(10)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property OrderNo() As String
		Get
			Return Me._OrderNo
		End Get
		Set
			If (String.Equals(Me._OrderNo, value) = false) Then
				Me.OnOrderNoChanging(value)
				Me.SendPropertyChanging
				Me._OrderNo = value
				Me.SendPropertyChanged("OrderNo")
				Me.OnOrderNoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CreateTime", DbType:="DateTime", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property CreateTime() As System.Nullable(Of Date)
		Get
			Return Me._CreateTime
		End Get
		Set
			If (Me._CreateTime.Equals(value) = false) Then
				Me.OnCreateTimeChanging(value)
				Me.SendPropertyChanging
				Me._CreateTime = value
				Me.SendPropertyChanged("CreateTime")
				Me.OnCreateTimeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CreateBy", DbType:="NVarChar(50)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property CreateBy() As String
		Get
			Return Me._CreateBy
		End Get
		Set
			If (String.Equals(Me._CreateBy, value) = false) Then
				Me.OnCreateByChanging(value)
				Me.SendPropertyChanging
				Me._CreateBy = value
				Me.SendPropertyChanged("CreateBy")
				Me.OnCreateByChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.order_Master_ExtensionV2")>  _
Partial Public Class orderMasterExtensionV2
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ORDER_ID As String
	
	Private _PI2CUSTOMER_FLAG As Integer
	
	Private _OrderNoScheme As Integer
	
	Private _OrderTaxRate As System.Nullable(Of Decimal)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnORDER_IDChanging(value As String)
    End Sub
    Partial Private Sub OnORDER_IDChanged()
    End Sub
    Partial Private Sub OnPI2CUSTOMER_FLAGChanging(value As Integer)
    End Sub
    Partial Private Sub OnPI2CUSTOMER_FLAGChanged()
    End Sub
    Partial Private Sub OnOrderNoSchemeChanging(value As Integer)
    End Sub
    Partial Private Sub OnOrderNoSchemeChanged()
    End Sub
    Partial Private Sub OnOrderTaxRateChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnOrderTaxRateChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ORDER_ID", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property ORDER_ID() As String
		Get
			Return Me._ORDER_ID
		End Get
		Set
			If (String.Equals(Me._ORDER_ID, value) = false) Then
				Me.OnORDER_IDChanging(value)
				Me.SendPropertyChanging
				Me._ORDER_ID = value
				Me.SendPropertyChanged("ORDER_ID")
				Me.OnORDER_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PI2CUSTOMER_FLAG", DbType:="Int NOT NULL", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property PI2CUSTOMER_FLAG() As Integer
		Get
			Return Me._PI2CUSTOMER_FLAG
		End Get
		Set
			If ((Me._PI2CUSTOMER_FLAG = value)  _
						= false) Then
				Me.OnPI2CUSTOMER_FLAGChanging(value)
				Me.SendPropertyChanging
				Me._PI2CUSTOMER_FLAG = value
				Me.SendPropertyChanged("PI2CUSTOMER_FLAG")
				Me.OnPI2CUSTOMER_FLAGChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OrderNoScheme", DbType:="Int NOT NULL", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property OrderNoScheme() As Integer
		Get
			Return Me._OrderNoScheme
		End Get
		Set
			If ((Me._OrderNoScheme = value)  _
						= false) Then
				Me.OnOrderNoSchemeChanging(value)
				Me.SendPropertyChanging
				Me._OrderNoScheme = value
				Me.SendPropertyChanged("OrderNoScheme")
				Me.OnOrderNoSchemeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OrderTaxRate")>  _
	Public Property OrderTaxRate() As System.Nullable(Of Decimal)
		Get
			Return Me._OrderTaxRate
		End Get
		Set
			If (Me._OrderTaxRate.Equals(value) = false) Then
				Me.OnOrderTaxRateChanging(value)
				Me.SendPropertyChanging
				Me._OrderTaxRate = value
				Me.SendPropertyChanged("OrderTaxRate")
				Me.OnOrderTaxRateChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.CART_DETAIL_V2")>  _
Partial Public Class CartItem
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ID As Integer
	
	Private _Cart_Id As String
	
	Private _Line_No As System.Nullable(Of Integer)
	
	Private _Part_No As String
	
	Private _Description As String
	
	Private _Qty As System.Nullable(Of Integer)
	
	Private _List_Price As System.Nullable(Of Decimal)
	
	Private _Unit_Price As System.Nullable(Of Decimal)
	
	Private _Itp As System.Nullable(Of Decimal)
	
	Private _RecyclingFee As System.Nullable(Of Decimal)
	
	Private _Delivery_Plant As String
	
	Private _Category As String
	
	Private _class As String
	
	Private _rohs As System.Nullable(Of Integer)
	
	Private _Ew_Flag As System.Nullable(Of Integer)
	
	Private _req_date As System.Nullable(Of Date)
	
	Private _due_date As System.Nullable(Of Date)
	
	Private _SatisfyFlag As System.Nullable(Of Integer)
	
	Private _CanbeConfirmed As System.Nullable(Of Integer)
	
	Private _CustMaterial As String
	
	Private _inventory As System.Nullable(Of Integer)
	
	Private _otype As System.Nullable(Of Integer)
	
	Private _Model_No As String
	
	Private _QUOTE_ID As String
	
	Private _oUnit_Price As System.Nullable(Of Decimal)
	
	Private _higherLevel As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnCart_IdChanging(value As String)
    End Sub
    Partial Private Sub OnCart_IdChanged()
    End Sub
    Partial Private Sub OnLine_NoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnLine_NoChanged()
    End Sub
    Partial Private Sub OnPart_NoChanging(value As String)
    End Sub
    Partial Private Sub OnPart_NoChanged()
    End Sub
    Partial Private Sub OnDescriptionChanging(value As String)
    End Sub
    Partial Private Sub OnDescriptionChanged()
    End Sub
    Partial Private Sub OnQtyChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnQtyChanged()
    End Sub
    Partial Private Sub OnList_PriceChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnList_PriceChanged()
    End Sub
    Partial Private Sub OnUnit_PriceChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnUnit_PriceChanged()
    End Sub
    Partial Private Sub OnItpChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnItpChanged()
    End Sub
    Partial Private Sub OnRecyclingFeeChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnRecyclingFeeChanged()
    End Sub
    Partial Private Sub OnDelivery_PlantChanging(value As String)
    End Sub
    Partial Private Sub OnDelivery_PlantChanged()
    End Sub
    Partial Private Sub OnCategoryChanging(value As String)
    End Sub
    Partial Private Sub OnCategoryChanged()
    End Sub
    Partial Private Sub OnclassChanging(value As String)
    End Sub
    Partial Private Sub OnclassChanged()
    End Sub
    Partial Private Sub OnrohsChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnrohsChanged()
    End Sub
    Partial Private Sub OnEw_FlagChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnEw_FlagChanged()
    End Sub
    Partial Private Sub Onreq_dateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Onreq_dateChanged()
    End Sub
    Partial Private Sub Ondue_dateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Ondue_dateChanged()
    End Sub
    Partial Private Sub OnSatisfyFlagChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSatisfyFlagChanged()
    End Sub
    Partial Private Sub OnCanbeConfirmedChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCanbeConfirmedChanged()
    End Sub
    Partial Private Sub OnCustMaterialChanging(value As String)
    End Sub
    Partial Private Sub OnCustMaterialChanged()
    End Sub
    Partial Private Sub OninventoryChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OninventoryChanged()
    End Sub
    Partial Private Sub OnotypeChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnotypeChanged()
    End Sub
    Partial Private Sub OnModel_NoChanging(value As String)
    End Sub
    Partial Private Sub OnModel_NoChanged()
    End Sub
    Partial Private Sub OnQUOTE_IDChanging(value As String)
    End Sub
    Partial Private Sub OnQUOTE_IDChanged()
    End Sub
    Partial Private Sub OnoUnit_PriceChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnoUnit_PriceChanged()
    End Sub
    Partial Private Sub OnhigherLevelChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnhigherLevelChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Cart_Id", DbType:="VarChar(50)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Cart_Id() As String
		Get
			Return Me._Cart_Id
		End Get
		Set
			If (String.Equals(Me._Cart_Id, value) = false) Then
				Me.OnCart_IdChanging(value)
				Me.SendPropertyChanging
				Me._Cart_Id = value
				Me.SendPropertyChanged("Cart_Id")
				Me.OnCart_IdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Line_No", DbType:="Int", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Line_No() As System.Nullable(Of Integer)
		Get
			Return Me._Line_No
		End Get
		Set
			If (Me._Line_No.Equals(value) = false) Then
				Me.OnLine_NoChanging(value)
				Me.SendPropertyChanging
				Me._Line_No = value
				Me.SendPropertyChanged("Line_No")
				Me.OnLine_NoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Part_No", DbType:="VarChar(100)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Part_No() As String
		Get
			Return Me._Part_No
		End Get
		Set
			If (String.Equals(Me._Part_No, value) = false) Then
				Me.OnPart_NoChanging(value)
				Me.SendPropertyChanging
				Me._Part_No = value
				Me.SendPropertyChanged("Part_No")
				Me.OnPart_NoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Description", DbType:="NVarChar(300)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Description() As String
		Get
			Return Me._Description
		End Get
		Set
			If (String.Equals(Me._Description, value) = false) Then
				Me.OnDescriptionChanging(value)
				Me.SendPropertyChanging
				Me._Description = value
				Me.SendPropertyChanged("Description")
				Me.OnDescriptionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Qty", DbType:="Int", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Qty() As System.Nullable(Of Integer)
		Get
			Return Me._Qty
		End Get
		Set
			If (Me._Qty.Equals(value) = false) Then
				Me.OnQtyChanging(value)
				Me.SendPropertyChanging
				Me._Qty = value
				Me.SendPropertyChanged("Qty")
				Me.OnQtyChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_List_Price", DbType:="Decimal(10,2)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property List_Price() As System.Nullable(Of Decimal)
		Get
			Return Me._List_Price
		End Get
		Set
			If (Me._List_Price.Equals(value) = false) Then
				Me.OnList_PriceChanging(value)
				Me.SendPropertyChanging
				Me._List_Price = value
				Me.SendPropertyChanged("List_Price")
				Me.OnList_PriceChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Unit_Price", DbType:="Decimal(10,2)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Unit_Price() As System.Nullable(Of Decimal)
		Get
			Return Me._Unit_Price
		End Get
		Set
			If (Me._Unit_Price.Equals(value) = false) Then
				Me.OnUnit_PriceChanging(value)
				Me.SendPropertyChanging
				Me._Unit_Price = value
				Me.SendPropertyChanged("Unit_Price")
				Me.OnUnit_PriceChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Itp", DbType:="Money", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Itp() As System.Nullable(Of Decimal)
		Get
			Return Me._Itp
		End Get
		Set
			If (Me._Itp.Equals(value) = false) Then
				Me.OnItpChanging(value)
				Me.SendPropertyChanging
				Me._Itp = value
				Me.SendPropertyChanged("Itp")
				Me.OnItpChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RecyclingFee", DbType:="Decimal(8,2)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property RecyclingFee() As System.Nullable(Of Decimal)
		Get
			Return Me._RecyclingFee
		End Get
		Set
			If (Me._RecyclingFee.Equals(value) = false) Then
				Me.OnRecyclingFeeChanging(value)
				Me.SendPropertyChanging
				Me._RecyclingFee = value
				Me.SendPropertyChanged("RecyclingFee")
				Me.OnRecyclingFeeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Delivery_Plant", DbType:="VarChar(10)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Delivery_Plant() As String
		Get
			Return Me._Delivery_Plant
		End Get
		Set
			If (String.Equals(Me._Delivery_Plant, value) = false) Then
				Me.OnDelivery_PlantChanging(value)
				Me.SendPropertyChanging
				Me._Delivery_Plant = value
				Me.SendPropertyChanged("Delivery_Plant")
				Me.OnDelivery_PlantChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Category", DbType:="VarChar(300)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Category() As String
		Get
			Return Me._Category
		End Get
		Set
			If (String.Equals(Me._Category, value) = false) Then
				Me.OnCategoryChanging(value)
				Me.SendPropertyChanging
				Me._Category = value
				Me.SendPropertyChanged("Category")
				Me.OnCategoryChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="class", Storage:="_class", DbType:="VarChar(8)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property [class]() As String
		Get
			Return Me._class
		End Get
		Set
			If (String.Equals(Me._class, value) = false) Then
				Me.OnclassChanging(value)
				Me.SendPropertyChanging
				Me._class = value
				Me.SendPropertyChanged("[class]")
				Me.OnclassChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rohs", DbType:="Int", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property rohs() As System.Nullable(Of Integer)
		Get
			Return Me._rohs
		End Get
		Set
			If (Me._rohs.Equals(value) = false) Then
				Me.OnrohsChanging(value)
				Me.SendPropertyChanging
				Me._rohs = value
				Me.SendPropertyChanged("rohs")
				Me.OnrohsChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Ew_Flag", DbType:="Int", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Ew_Flag() As System.Nullable(Of Integer)
		Get
			Return Me._Ew_Flag
		End Get
		Set
			If (Me._Ew_Flag.Equals(value) = false) Then
				Me.OnEw_FlagChanging(value)
				Me.SendPropertyChanging
				Me._Ew_Flag = value
				Me.SendPropertyChanged("Ew_Flag")
				Me.OnEw_FlagChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_req_date", DbType:="Date", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property req_date() As System.Nullable(Of Date)
		Get
			Return Me._req_date
		End Get
		Set
			If (Me._req_date.Equals(value) = false) Then
				Me.Onreq_dateChanging(value)
				Me.SendPropertyChanging
				Me._req_date = value
				Me.SendPropertyChanged("req_date")
				Me.Onreq_dateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_due_date", DbType:="Date", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property due_date() As System.Nullable(Of Date)
		Get
			Return Me._due_date
		End Get
		Set
			If (Me._due_date.Equals(value) = false) Then
				Me.Ondue_dateChanging(value)
				Me.SendPropertyChanging
				Me._due_date = value
				Me.SendPropertyChanged("due_date")
				Me.Ondue_dateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SatisfyFlag", DbType:="Int", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property SatisfyFlag() As System.Nullable(Of Integer)
		Get
			Return Me._SatisfyFlag
		End Get
		Set
			If (Me._SatisfyFlag.Equals(value) = false) Then
				Me.OnSatisfyFlagChanging(value)
				Me.SendPropertyChanging
				Me._SatisfyFlag = value
				Me.SendPropertyChanged("SatisfyFlag")
				Me.OnSatisfyFlagChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CanbeConfirmed", DbType:="Int", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property CanbeConfirmed() As System.Nullable(Of Integer)
		Get
			Return Me._CanbeConfirmed
		End Get
		Set
			If (Me._CanbeConfirmed.Equals(value) = false) Then
				Me.OnCanbeConfirmedChanging(value)
				Me.SendPropertyChanging
				Me._CanbeConfirmed = value
				Me.SendPropertyChanged("CanbeConfirmed")
				Me.OnCanbeConfirmedChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CustMaterial", DbType:="NVarChar(200)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property CustMaterial() As String
		Get
			Return Me._CustMaterial
		End Get
		Set
			If (String.Equals(Me._CustMaterial, value) = false) Then
				Me.OnCustMaterialChanging(value)
				Me.SendPropertyChanging
				Me._CustMaterial = value
				Me.SendPropertyChanged("CustMaterial")
				Me.OnCustMaterialChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_inventory", DbType:="Int", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property inventory() As System.Nullable(Of Integer)
		Get
			Return Me._inventory
		End Get
		Set
			If (Me._inventory.Equals(value) = false) Then
				Me.OninventoryChanging(value)
				Me.SendPropertyChanging
				Me._inventory = value
				Me.SendPropertyChanged("inventory")
				Me.OninventoryChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_otype", DbType:="Int", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property otype() As System.Nullable(Of Integer)
		Get
			Return Me._otype
		End Get
		Set
			If (Me._otype.Equals(value) = false) Then
				Me.OnotypeChanging(value)
				Me.SendPropertyChanging
				Me._otype = value
				Me.SendPropertyChanged("otype")
				Me.OnotypeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Model_No", DbType:="VarChar(50)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Model_No() As String
		Get
			Return Me._Model_No
		End Get
		Set
			If (String.Equals(Me._Model_No, value) = false) Then
				Me.OnModel_NoChanging(value)
				Me.SendPropertyChanging
				Me._Model_No = value
				Me.SendPropertyChanged("Model_No")
				Me.OnModel_NoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_QUOTE_ID", DbType:="NVarChar(50)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property QUOTE_ID() As String
		Get
			Return Me._QUOTE_ID
		End Get
		Set
			If (String.Equals(Me._QUOTE_ID, value) = false) Then
				Me.OnQUOTE_IDChanging(value)
				Me.SendPropertyChanging
				Me._QUOTE_ID = value
				Me.SendPropertyChanged("QUOTE_ID")
				Me.OnQUOTE_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_oUnit_Price", DbType:="Decimal(10,2)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property oUnit_Price() As System.Nullable(Of Decimal)
		Get
			Return Me._oUnit_Price
		End Get
		Set
			If (Me._oUnit_Price.Equals(value) = false) Then
				Me.OnoUnit_PriceChanging(value)
				Me.SendPropertyChanging
				Me._oUnit_Price = value
				Me.SendPropertyChanged("oUnit_Price")
				Me.OnoUnit_PriceChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_higherLevel", DbType:="Int", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property higherLevel() As System.Nullable(Of Integer)
		Get
			Return Me._higherLevel
		End Get
		Set
			If (Me._higherLevel.Equals(value) = false) Then
				Me.OnhigherLevelChanging(value)
				Me.SendPropertyChanging
				Me._higherLevel = value
				Me.SendPropertyChanged("higherLevel")
				Me.OnhigherLevelChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Cart_BtosPart_Manual")>  _
Partial Public Class Cart_BtosPart_Manual
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ID As Integer
	
	Private _Cart_Id As String
	
	Private _Part_No As String
	
	Private _Description As String
	
	Private _OrgID As String
	
	Private _COMPANY_ID As String
	
	Private _Created_Date As System.Nullable(Of Date)
	
	Private _Created_By As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnCart_IdChanging(value As String)
    End Sub
    Partial Private Sub OnCart_IdChanged()
    End Sub
    Partial Private Sub OnPart_NoChanging(value As String)
    End Sub
    Partial Private Sub OnPart_NoChanged()
    End Sub
    Partial Private Sub OnDescriptionChanging(value As String)
    End Sub
    Partial Private Sub OnDescriptionChanged()
    End Sub
    Partial Private Sub OnOrgIDChanging(value As String)
    End Sub
    Partial Private Sub OnOrgIDChanged()
    End Sub
    Partial Private Sub OnCOMPANY_IDChanging(value As String)
    End Sub
    Partial Private Sub OnCOMPANY_IDChanged()
    End Sub
    Partial Private Sub OnCreated_DateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCreated_DateChanged()
    End Sub
    Partial Private Sub OnCreated_ByChanging(value As String)
    End Sub
    Partial Private Sub OnCreated_ByChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Cart_Id", DbType:="VarChar(50)")>  _
	Public Property Cart_Id() As String
		Get
			Return Me._Cart_Id
		End Get
		Set
			If (String.Equals(Me._Cart_Id, value) = false) Then
				Me.OnCart_IdChanging(value)
				Me.SendPropertyChanging
				Me._Cart_Id = value
				Me.SendPropertyChanged("Cart_Id")
				Me.OnCart_IdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Part_No", DbType:="VarChar(100)")>  _
	Public Property Part_No() As String
		Get
			Return Me._Part_No
		End Get
		Set
			If (String.Equals(Me._Part_No, value) = false) Then
				Me.OnPart_NoChanging(value)
				Me.SendPropertyChanging
				Me._Part_No = value
				Me.SendPropertyChanged("Part_No")
				Me.OnPart_NoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Description", DbType:="NVarChar(300)")>  _
	Public Property Description() As String
		Get
			Return Me._Description
		End Get
		Set
			If (String.Equals(Me._Description, value) = false) Then
				Me.OnDescriptionChanging(value)
				Me.SendPropertyChanging
				Me._Description = value
				Me.SendPropertyChanged("Description")
				Me.OnDescriptionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OrgID", DbType:="NVarChar(150)")>  _
	Public Property OrgID() As String
		Get
			Return Me._OrgID
		End Get
		Set
			If (String.Equals(Me._OrgID, value) = false) Then
				Me.OnOrgIDChanging(value)
				Me.SendPropertyChanging
				Me._OrgID = value
				Me.SendPropertyChanged("OrgID")
				Me.OnOrgIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COMPANY_ID", DbType:="NChar(30)")>  _
	Public Property COMPANY_ID() As String
		Get
			Return Me._COMPANY_ID
		End Get
		Set
			If (String.Equals(Me._COMPANY_ID, value) = false) Then
				Me.OnCOMPANY_IDChanging(value)
				Me.SendPropertyChanging
				Me._COMPANY_ID = value
				Me.SendPropertyChanged("COMPANY_ID")
				Me.OnCOMPANY_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Created_Date", DbType:="DateTime")>  _
	Public Property Created_Date() As System.Nullable(Of Date)
		Get
			Return Me._Created_Date
		End Get
		Set
			If (Me._Created_Date.Equals(value) = false) Then
				Me.OnCreated_DateChanging(value)
				Me.SendPropertyChanging
				Me._Created_Date = value
				Me.SendPropertyChanged("Created_Date")
				Me.OnCreated_DateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Created_By", DbType:="VarChar(100)")>  _
	Public Property Created_By() As String
		Get
			Return Me._Created_By
		End Get
		Set
			If (String.Equals(Me._Created_By, value) = false) Then
				Me.OnCreated_ByChanging(value)
				Me.SendPropertyChanging
				Me._Created_By = value
				Me.SendPropertyChanged("Created_By")
				Me.OnCreated_ByChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class
