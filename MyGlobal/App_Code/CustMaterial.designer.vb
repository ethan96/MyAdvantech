'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="MyAdvantechGlobal")>  _
Partial Public Class CustMaterialDataContext
	Inherits System.Data.Linq.DataContext
	
	Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()
	
  #Region "Extensibility Method Definitions"
  Partial Private Sub OnCreated()
  End Sub
  Partial Private Sub InsertCust_MaterialMapping(instance As Cust_MaterialMapping)
    End Sub
  Partial Private Sub UpdateCust_MaterialMapping(instance As Cust_MaterialMapping)
    End Sub
  Partial Private Sub DeleteCust_MaterialMapping(instance As Cust_MaterialMapping)
    End Sub
  #End Region
	
	Public Sub New()
		MyBase.New(Global.System.Configuration.ConfigurationManager.ConnectionStrings("MyAdvantechGlobalConnectionString2").ConnectionString, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public ReadOnly Property Cust_MaterialMappings() As System.Data.Linq.Table(Of Cust_MaterialMapping)
		Get
			Return Me.GetTable(Of Cust_MaterialMapping)
		End Get
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Cust_MaterialMapping")>  _
Partial Public Class Cust_MaterialMapping
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _CustomerId As String
	
	Private _MaterialNo As String
	
	Private _CreatedBy As String
	
	Private _CreatedOn As System.Nullable(Of Date)
	
	Private _CustMaterialNo As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnCustomerIdChanging(value As String)
    End Sub
    Partial Private Sub OnCustomerIdChanged()
    End Sub
    Partial Private Sub OnMaterialNoChanging(value As String)
    End Sub
    Partial Private Sub OnMaterialNoChanged()
    End Sub
    Partial Private Sub OnCreatedByChanging(value As String)
    End Sub
    Partial Private Sub OnCreatedByChanged()
    End Sub
    Partial Private Sub OnCreatedOnChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCreatedOnChanged()
    End Sub
    Partial Private Sub OnCustMaterialNoChanging(value As String)
    End Sub
    Partial Private Sub OnCustMaterialNoChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CustomerId", DbType:="VarChar(20) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property CustomerId() As String
		Get
			Return Me._CustomerId
		End Get
		Set
			If (String.Equals(Me._CustomerId, value) = false) Then
				Me.OnCustomerIdChanging(value)
				Me.SendPropertyChanging
				Me._CustomerId = value
				Me.SendPropertyChanged("CustomerId")
				Me.OnCustomerIdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MaterialNo", DbType:="VarChar(50) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property MaterialNo() As String
		Get
			Return Me._MaterialNo
		End Get
		Set
			If (String.Equals(Me._MaterialNo, value) = false) Then
				Me.OnMaterialNoChanging(value)
				Me.SendPropertyChanging
				Me._MaterialNo = value
				Me.SendPropertyChanged("MaterialNo")
				Me.OnMaterialNoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CreatedBy", DbType:="VarChar(50)")>  _
	Public Property CreatedBy() As String
		Get
			Return Me._CreatedBy
		End Get
		Set
			If (String.Equals(Me._CreatedBy, value) = false) Then
				Me.OnCreatedByChanging(value)
				Me.SendPropertyChanging
				Me._CreatedBy = value
				Me.SendPropertyChanged("CreatedBy")
				Me.OnCreatedByChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CreatedOn", DbType:="DateTime")>  _
	Public Property CreatedOn() As System.Nullable(Of Date)
		Get
			Return Me._CreatedOn
		End Get
		Set
			If (Me._CreatedOn.Equals(value) = false) Then
				Me.OnCreatedOnChanging(value)
				Me.SendPropertyChanging
				Me._CreatedOn = value
				Me.SendPropertyChanged("CreatedOn")
				Me.OnCreatedOnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CustMaterialNo", DbType:="NVarChar(200)")>  _
	Public Property CustMaterialNo() As String
		Get
			Return Me._CustMaterialNo
		End Get
		Set
			If (String.Equals(Me._CustMaterialNo, value) = false) Then
				Me.OnCustMaterialNoChanging(value)
				Me.SendPropertyChanging
				Me._CustMaterialNo = value
				Me.SendPropertyChanged("CustMaterialNo")
				Me.OnCustMaterialNoChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class
